poplabels <- st %>% group_by(LAT, LONG) %>%
summarise(POP_ID=last(POP_ID))
poplabels
colnames(pop) <- poplabels$POP_ID
rownames(pop) <- poplabels$POP_ID
popmap <- read.table("mah_juv.popmap.txt", header=T)
colnames(geo) <- rownames(geo)
m <- as.matrix(geo)
t<-data.frame(col=colnames(m)[col(m)], row=rownames(m)[row(m)], dist=c(m))
colnames(t) <- c("IND_ID", "TO_ID", "DIST")
tt <- left_join(t, popmap, by="IND_ID")
p2 <- popmap
colnames(p2) <- c("TO_ID", "POP_TO_ID")
ttt <- left_join(tt, p2, by="TO_ID")
popgeo <- ttt %>% group_by(POP_ID, POP_TO_ID) %>%
summarise(d=mean(DIST))
# reformat gen dist
pop <- read.table("mah_juv.popGenDistMat.txt", sep="\t", header=TRUE)
snap <- read.table("mah_juv.pointCoords.txt", header=T)
colnames(snap) <- c("IND_ID", "LAT", "LONG")
st <- left_join(snap, popmap, by="IND_ID")
poplabels <- st %>% group_by(LAT, LONG) %>%
summarise(POP_ID=last(POP_ID))
colnames(pop) <- poplabels$POP_ID
rownames(pop) <- poplabels$POP_ID
pm <- as.matrix(pop)
pt<-data.frame(col=colnames(pm)[col(pm)], row=rownames(pm)[row(pm)], dist=c(pm))
colnames(pt) <- c("IND_ID", "TO_ID", "GENDIST")
ptt <- left_join(pt, popmap, by="IND_ID")
pttt <- left_join(ptt, p2, by="TO_ID")
popgen <- pttt %>% group_by(POP_ID, POP_TO_ID) %>%
summarise(g=slice(which.max(n)))
popgen <- pttt %>% group_by(POP_ID, POP_TO_ID) %>%
summarise(g=mean(GENDIST))
head(pttt)
# reformat gen dist
pop <- read.table("mah_juv.popGenDistMat.txt", sep="\t", header=TRUE)
snap <- read.table("mah_juv.pointCoords.txt", header=T)
colnames(snap) <- c("IND_ID", "LAT", "LONG")
st <- left_join(snap, popmap, by="IND_ID")
poplabels <- st %>% group_by(LAT, LONG) %>%
summarise(POP_ID=last(POP_ID))
poplabels
poplabels <- st %>% group_by(LAT, LONG) %>%
summarise(POP_ID=last(POP_ID)) %>%
arrange(POP_ID)
poplabels
colnames(pop) <- poplabels$POP_ID
rownames(pop) <- poplabels$POP_ID
pm <- as.matrix(pop)
pt<-data.frame(col=colnames(pm)[col(pm)], row=rownames(pm)[row(pm)], dist=c(pm))
colnames(pt) <- c("IND_ID", "TO_ID", "GENDIST")
ptt <- left_join(pt, popmap, by="IND_ID")
pttt <- left_join(ptt, p2, by="TO_ID")
popgen <- pttt %>% group_by(POP_ID, POP_TO_ID) %>%
summarise(g=mean(GENDIST))
pttt
poplabels
pop
head(pm)
pt<-data.frame(col=colnames(pm)[col(pm)], row=rownames(pm)[row(pm)], dist=c(pm))
head(pt)
pm
head(pm)
pm <- pop
pt<-data.frame(col=colnames(pm)[col(pm)], row=rownames(pm)[row(pm)], dist=c(pm))
head(pt)
colnames(pt) <- c("IND_ID", "TO_ID", "GENDIST")
ptt <- left_join(pt, popmap, by="IND_ID")
pttt <- left_join(ptt, p2, by="TO_ID")
popgen <- pttt %>% group_by(POP_ID, POP_TO_ID) %>%
summarise(g=mean(GENDIST))
pt
head(pt)
pm <- pop
pt<-data.frame(col=colnames(pm)[col(pm)], row=rownames(pm)[row(pm)], dist=c(pm))
head(pt)
pt<-data.frame(col=colnames(pm)[col(pm)], row=rownames(pm)[row(pm)], dist=c(pm))
head(pt)
pt<-data.frame(col=colnames(pm)[col(pm)], row=rownames(pm)[row(pm)], dist=c(as.matrix(pm))
)
head(pt)
head(pop)
as.matrix(pop)
head(pop)
p <- pop[,1] <- NULL
head(p)
p <- pop
p[,1]<- NULL
head(p)
pop[,1]<- NULL
colnames(pop) <- poplabels$POP_ID
colnames(p) <- poplabels$POP_ID
# reformat gen dist
pop <- read.table("mah_juv.popGenDistMat.txt", sep="\t", header=TRUE)
p<- pop
p[,1]<- NULL
colnames(p) <- poplabels$POP_ID
rownames(p) <- poplabels$POP_ID
pm <- p
pt<-data.frame(col=colnames(pm)[col(pm)], row=rownames(pm)[row(pm)], dist=c(pm))
head(pt)
pm <- as.matrix(p)
pt<-data.frame(col=colnames(pm)[col(pm)], row=rownames(pm)[row(pm)], dist=c(pm))
colnames(pt) <- c("IND_ID", "TO_ID", "GENDIST")
ptt <- left_join(pt, popmap, by="IND_ID")
pttt <- left_join(ptt, p2, by="TO_ID")
popgen <- pttt %>% group_by(POP_ID, POP_TO_ID) %>%
summarise(g=mean(GENDIST))
head(popgen)
head(pttt)
head(pt)
colnames(pt) <- c("POP_ID", "TO_ID", "GENDIST")
pt<-data.frame(col=colnames(pm)[col(pm)], row=rownames(pm)[row(pm)], dist=c(pm))
colnames(pt) <- c("POP_ID", "POP_TO_ID", "GENDIST")
pt
all <- left_join(popgeo, popgen, by=c("POP_ID", "POP_TO_ID"))
all <- left_join(popgeo, pt, by=c("POP_ID", "POP_TO_ID"))
head(all)
ggplot(all, aes(x=d, y=GENDIST)) +
geom_point(alpha=0.5) +
theme_minimal()
ggplot(all, aes(x=log(d), y=GENDIST)) +
geom_point(alpha=0.5) +
theme_minimal()
ggplot(all, aes(x=d, y=GENDIST)) +
geom_point(alpha=0.5) +
theme_minimal()
p1<-ggplot(df, aes(x=Geo, y=Gen)) +
geom_point(alpha=0.5) +
theme_minimal() +
xlab("Geographic distance (km)") +
ylab("Genetic distance")
p2<-ggplot(all, aes(x=d, y=GENDIST)) +
geom_point(alpha=0.5) +
theme_minimal() +
xlab("Geographic distance (km)") +
ylab("Genetic distance")
library(ggarrange)
install.packages("ggarrange")
library(ggpubr)
##
ggarrange(p1, p2 )
##
ggarrange(p1, p2, nrow = 2)
p1<-ggplot(df, aes(x=Geo, y=Gen)) +
geom_point(alpha=0.3) +
theme_minimal() +
geom_smooth(method='lm', formula= y~x) +
xlab("Geographic distance (km)") +
ylab("Genetic distance")
p2<-ggplot(all, aes(x=d, y=GENDIST)) +
geom_point(alpha=0.3) +
theme_minimal() +
geom_smooth(method='lm', formula= y~x) +
xlab("Geographic distance (km)") +
ylab("Genetic distance")
ggarrange(p1, p2, nrow = 2)
##
p1<-ggplot(df, aes(x=Geo, y=Gen)) +
geom_point(alpha=0.3) +
theme_minimal() +
geom_smooth(method='lm', formula= y~x, aes(color="red")) +
xlab("Geographic distance (km)") +
ylab("Genetic distance")
p2<-ggplot(all, aes(x=d, y=GENDIST)) +
geom_point(alpha=0.3) +
theme_minimal() +
geom_smooth(method='lm', formula= y~x, aes(color="red")) +
xlab("Geographic distance (km)") +
ylab("Genetic distance")
ggarrange(p1, p2, nrow = 2)
library(adegenet)
library(genepopedit)
library(diveRsity)
library(phangorn)
library(ape)
library(gtools)
library(pegas)
read_structure <- function(x){
d<-read.table(x, header=F, sep="\t")
dat <- read.structure(x,
onerowperind=F,
n.ind=(nrow(d)/2),
n.loc=(ncol(d)-2),
col.lab=1,
row.marknames=0,
col.pop=2,
ask=FALSE,
quiet=TRUE)
return(dat)
}
dapc_xval <- function(dat, prefix){
x<-dat
mat <- tab(x, NA.method="mean")
grp<- x$pop
cx<-xvalDapc(mat, grp, n.pca.max = 300, training.set = 0.9,
result = "groupMean", center = TRUE, scale = FALSE,
n.pca = NULL, n.rep = 30, xval.plot = TRUE)
out<-paste0(prefix, "_xval.pdf")
pdf(out)
plot(as.numeric(names(cx[5][[1]])), unlist(cx[5]), main="DAPC Cross-Validation RMSE", xlab="PCA Axes Retained", ylab="RMSE")
dev.off()
pc_retain<-as.numeric(as.vector(names(cx[5][[1]])))[which.min(unlist(cx[5]))]
print(paste0("Num PC axes minimizing RMSE: ", pc_retain))
dapc1 <- dapc(x, n.pca=pc_retain, n.da=length(unique(grp)))
out2<-paste0(prefix, "_dapc.pdf")
pdf(out2)
scatter(dapc1, cex=2, cstar=0, scree.da=F)
scatter(dapc1, xax=2, yax=3, cex=2, cstar=0, scree.da=F)
scatter(dapc1, cex=2, cstar=1, scree.da=F)
scatter(dapc1, xax=2, yax=3, cex=2, cstar=1, scree.da=F)
dev.off()
eig<-dapc1$eig
pov<-eig/sum(eig)*100
print(paste0("Percentage of variance explained by DA axes:"))
print(pov)
#data
return(dapc1)
}
setwd("~/MAH/")
#read data
struct <- read_structure("mah_juv_filtered.str")
dapc_xval(struct, "mah_juv")
#read data
struct <- read_structure("mah_all_filtered.str")
setwd("~/MAH/")
#read data
struct <- read_structure("mah_all.str")
dapc_xval(struct, "mah_all")
scatter(dapc_xval)
dapc <- dapc_xval(struct, "mah_all")
scatter(dapc)
dapc$pca.loadings
struct$pop
struct$pop[struct$pop==1] <- "Bur Khola"
struct$pop[struct$pop==2] <- "Punatsang"
struct$pop[struct$pop==3] <- "Dol Khola"
struct$pop[struct$pop==4] <- "Amocchu"
struct$pop[struct$pop==5] <- "Punatsang"
struct$pop[struct$pop==6] <- "Wangchhu"
struct$pop[struct$pop==7] <- "Mao Khola"
struct$pop[struct$pop==8] <- "Punatsang"
struct$pop[struct$pop==9] <- "Mangechhu"
struct$pop[struct$pop==10] <- "Nyera-Amari"
struct$pop[struct$pop==11] <- "Nyera-Amari"
struct$pop[struct$pop==12] <- "Nyera-Amari"
struct$pop[struct$pop==13] <- "Kurichhu"
struct$pop[struct$pop==14] <- "Dangmechhu"
struct$pop[struct$pop==15] <- "Mangdechhu (a)"
struct$pop[struct$pop==16] <- "Dangmechhu (a)"
struct$pop[struct$pop==17] <- "Manas (a)"
struct$pop[struct$pop==18] <- "Punatsang (a)"
struct$pop[struct$pop=="1"] <- "Bur Khola"
struct$pop
#read data
struct <- read_structure("mah_all.str")
struct$pop[struct$pop=="1"] <- "Bur Khola"
#read data
struct <- read_structure("mah_all.str")
pop <- struct$pop
pop <- struct$pop
pop[pop=="1"] <- "Bur Khola"
pop[pop==2] <- "Punatsang"
#read data
struct <- read_structure("mah_all.str")
pop <- as.vector(struct$pop)
pop[pop=="1"] <- "Bur Khola"
pop[pop==2] <- "Punatsang"
pop[pop==3] <- "Dol Khola"
pop[pop==4] <- "Amocchu"
pop[pop==5] <- "Punatsang"
pop[pop==6] <- "Wangchhu"
pop[pop==7] <- "Mao Khola"
pop[pop==8] <- "Punatsang"
pop[pop==9] <- "Mangechhu"
pop[pop==10] <- "Nyera-Amari"
pop[pop==11] <- "Nyera-Amari"
pop[pop==12] <- "Nyera-Amari"
pop[pop==13] <- "Kurichhu"
pop[pop==14] <- "Dangmechhu"
pop[pop==15] <- "Mangdechhu (a)"
pop[pop==16] <- "Dangmechhu (a)"
pop[pop==17] <- "Manas (a)"
pop[pop==18] <- "Punatsang (a)"
pop
struct$pop <- pop
struct$pop <- as.facgtor(pop)
struct$pop <- as.factor(pop)
struct$pop
struct$pop <- as.factor(pop)
dapc <- dapc_xval(struct, "mah_all")
scatter(dapc)
t<-read.table("~/MAH/MAH/mah_all_latent_coords.txt", header=T)
ggplot(t, aes(x=mean1, y=mean2, fill=sampleID))
ggplot(t, aes(x=mean1, y=mean2, fill=sampleID)) + geom_point()
ggplot(t, aes(x=mean1, y=mean2)) + geom_point()
t<-read.table("~/MAH/MAH/mah_all_pca.txt", header=T)
ggplot(t, aes(x=mean1, y=mean2)) + geom_point()
head(t)
ggplot(t, aes(x=PC1, y=PC2)) + geom_point()
scatter(dapc)
struct
dist(struct)
d<-dist(struct)
as.matrix(d)
hist(as.matrix(d), breaks=100)
dm<-as.matrix(d)
hist(d[d!=0.0], breaks=100)
setwd("~/programs/autostreamtree/")
gen <- read.table("juv.indGenDistMat.txt", header=TRUE)
library(ggplot2)
library(dplyr)
library(reshape2)
setwd("~/programs/autostreamtree/")
gen <- read.table("juv.indGenDistMat.txt", header=TRUE)
popmap <- read.table("data/mah.popmap", header=T)
m <- as.matrix(gen)
t<-data.frame(col=colnames(m)[col(m)], row=rownames(m)[row(m)], dist=c(m))
colnames(t) <- c("IND_ID", "TO_ID", "DIST")
t
head(t)
gen <- read.table("juv.indGenDistMat.txt", header=TRUE, check.names=F)
popmap <- read.table("data/mah.popmap", header=T)
m <- as.matrix(gen)
t<-data.frame(col=colnames(m)[col(m)], row=rownames(m)[row(m)], dist=c(m))
colnames(t) <- c("IND_ID", "TO_ID", "DIST")
head(t)
p1 <- popmap
colnames(p1) <- c("IND_ID", "POP1")
p2 <- popmap
colnames(p2) <- c("TO_ID", "POP2")
tt<-left_join(t, p1, by="IND_ID")
head(tt)
popmap <- read.table("data/mah.popmap", header=T)
popmap
popmap <- read.table("data/mah.popmap", header=F)
p1 <- popmap
colnames(p1) <- c("IND_ID", "POP1")
p2 <- popmap
colnames(p2) <- c("TO_ID", "POP2")
head(p1)
tt<-left_join(t, p1, by="IND_ID")
head(tt)
ttt <- left_join(tt, p2, by="TO_ID")
head(ttt)
ttt[ttt$POP1 == ttt$POP1,]
ttt[ttt$POP1 == ttt$POP1,]
ttt[ttt$POP1 == ttt$POP2,]
ttt$which <- "among"
ttt[ttt$POP1 == ttt$POP2,]$which <- "within"
ggplot(ttt, aes(x=which, y=DIST)) + geom_boxplot()
ggplot(ttt, aes(x=which, y=DIST)) + geom_boxplot() +
geom_signif(map_signif_level=TRUE) +
theme_minimal()
ggplot(ttt, aes(x=which, y=DIST)) + geom_boxplot() +
geom_signif(map_signif_level=TRUE, comparisons=list(c("among", "within"))) +
theme_minimal()
p1<-ggplot(ttt, aes(x=which, y=DIST)) + geom_boxplot() +
geom_signif(map_signif_level=TRUE, comparisons=list(c("among", "within"))) +
theme_minimal()
p1
p1<-ggplot(ttt, aes(x=which, y=DIST)) + geom_boxplot() +
geom_signif(map_signif_level=TRUE, comparisons=list(c("among", "within"))) +
theme_minimal() +
xlab("") +
ylab("Proportion SNP differences")
p1
#### among-pop IBD
geo <- read.table("juv.streamDistMat.txt", header=TRUE)
geo <- read.table("juv.streamDistMat.txt", header=TRUE)
df <- data.frame("Geo"=as.vector(unlist(geo)),
"Gen"=as.vector(unlist(gen))
)
head(df)
p2<-ggplot(df, aes(x=Geo, y=Gen)) +
geom_point(alpha=0.3) +
theme_minimal() +
xlab("Geographic distance (km)") +
ylab("Genetic distance")
p2
#### among-pop IBD
popgen <- read.table("juvpop.popGenDistMat.txt", header=TRUE)
geo <- read.table("juvpop.streamDistMat.txt", header=TRUE)
df <- data.frame("Geo"=as.vector(unlist(geo)),
"Gen"=as.vector(unlist(gen))
)
head(popgen)
head(geo)
popgen <- read.table("juvpop.popGenDistMat.txt", header=TRUE)
geo <- read.table("juvpop.streamDistMat.txt", header=TRUE)
df <- data.frame("Geo"=as.vector(unlist(geo)),
"Gen"=as.vector(unlist(popgen))
)
p2<-ggplot(df, aes(x=Geo, y=Gen)) +
geom_point(alpha=0.3) +
theme_minimal() +
xlab("Geographic distance (km)") +
ylab("Genetic distance")
p2
p2<-ggplot(df, aes(x=Geo, y=Gen)) +
geom_point(alpha=0.3) +
theme_minimal() +
geom_smooth(method='lm', formula= y~x, aes(color="red")) +
xlab("Geographic distance (km)") +
ylab("Genetic distance (Jost's D)")
p2
p2<-ggplot(df, aes(x=Geo, y=Gen)) +
geom_point(alpha=0.3) +
theme_minimal() +
geom_smooth(method='lm', formula= y~x, aes(color="red"), show.legend = FALSE) +
xlab("Geographic distance (km)") +
ylab("Genetic distance (Jost's D)")
p2
ggarrange(p1, p2, nrow = 2)
ggarrange(p1, p2, nrow = 1)
ggarrange(p1, p2, nrow = 1, widths = c(0.5, 1))
p2<-ggplot(df, aes(x=Geo, y=Gen)) +
geom_point(alpha=0.3) +
theme_minimal() +
geom_smooth(method='lm', formula= y~x, aes(color="red"), show.legend = FALSE) +
xlab("Geographic distance (km)") +
ylab("Genetic distance (Jost's D)") +
theme(text = element_text(size = 20))
p2
p1<-ggplot(ttt, aes(x=which, y=DIST)) + geom_boxplot() +
geom_signif(map_signif_level=TRUE, comparisons=list(c("among", "within"))) +
theme_minimal() +
xlab("") +
ylab("Proportion SNP differences") +
theme(text = element_text(size = 20))
p1
ggarrange(p1, p2, nrow = 1, widths = c(0.5, 1))
t<-read.table("juvpop.obsVersusFittedD.txt", header=T)
head(t)
ggplot(t, aes(x=observed_D, y=predicted_D, fill=abs_diff))+
theme_minimal()+
geom_point() +
scale_fill_viridis_d()+
xlab("Observed D (Jost)") +
ylab("Fitted D (Jost)") +
theme(text = element_text(size = 20))
ggplot(t, aes(x=observed_D, y=predicted_D, fill=abs_diff))+
theme_minimal()+
geom_point() +
scale_fill_viridis_c()+
xlab("Observed D (Jost)") +
ylab("Fitted D (Jost)") +
theme(text = element_text(size = 20))
ggplot(t, aes(x=observed_D, y=predicted_D, color=abs_diff))+
theme_minimal()+
geom_point() +
scale_fill_viridis_c()+
xlab("Observed D (Jost)") +
ylab("Fitted D (Jost)") +
theme(text = element_text(size = 20))
ggplot(t, aes(x=observed_D, y=predicted_D, color=abs_diff))+
theme_minimal()+
geom_point() +
scale_color_viridis_c()+
xlab("Observed D (Jost)") +
ylab("Fitted D (Jost)") +
theme(text = element_text(size = 20))
ggplot(t, aes(x=observed_D, y=predicted_D, color=abs_diff))+
theme_minimal()+
geom_point() +
scale_color_viridis_c()+
geom_smooth(method='lm', formula= y~x, aes(color="red"), show.legend = FALSE) +
xlab("Observed D (Jost)") +
ylab("Fitted D (Jost)") +
theme(text = element_text(size = 20))
ggplot(t, aes(x=observed_D, y=predicted_D, color=abs_diff))+
theme_minimal()+
geom_point() +
scale_color_viridis_c()+
xlab("Observed D (Jost)") +
ylab("Fitted D (Jost)") +
geom_smooth(method='lm', formula= y~x, aes(color="red"), show.legend = FALSE) +
theme(text = element_text(size = 20))
ggplot(t, aes(x=observed_D, y=predicted_D, color=abs_diff))+
theme_minimal()+
scale_color_viridis_c()+
geom_point() +
xlab("Observed D (Jost)") +
ylab("Fitted D (Jost)") +
geom_smooth(method='lm', formula= y~x, aes(color="red"), show.legend = FALSE) +
theme(text = element_text(size = 20))
ggplot(t, aes(x=observed_D, y=predicted_D, color=abs_diff))+
geom_smooth(method='lm', formula= y~x, aes(color="red"), show.legend = FALSE) +
theme_minimal()+
scale_color_viridis_c()+
geom_point() +
xlab("Observed D (Jost)") +
ylab("Fitted D (Jost)") +
theme(text = element_text(size = 20))
p3<-ggplot(t, aes(x=observed_D, y=predicted_D, color=abs_diff))+
theme_minimal()+
scale_color_viridis_c()+
geom_point() +
xlab("Observed D (Jost)") +
ylab("Fitted D (Jost)") +
theme(text = element_text(size = 20))
p3 +   geom_smooth(method='lm', formula= y~x, aes(color="red"), show.legend = FALSE) +
p3 +   geom_smooth(method='lm', formula= y~x, aes(color="red"), show.legend = FALSE)
p3 +   geom_smooth(method='lm', formula= y~x, aes(color="red"), show.legend = FALSE)
ggplot(t, aes(x=observed_D, y=predicted_D))+
theme_minimal()+
geom_point() +
xlab("Observed D (Jost)") +
ylab("Fitted D (Jost)") +
geom_smooth(method='lm', formula= y~x, aes(color="red"), show.legend = FALSE) +
theme(text = element_text(size = 20))
